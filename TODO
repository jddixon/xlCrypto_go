xlCrypto_go/TODO

2014-09-25
    * FIX: buildList_test line 46 feeds header without timestamp
        to ParseBuildList()

2014-09-24
    REFACTORING
    * BuildList becomes abstract class
        - move PubKey and DigSig fields to builds/SignedList
        - this breaks BuildList.GetHash()
        - so GetHash() must be implemented in the child class

    * UnsignedList extends BuildList                                    * ROUGH
        - inline documentation needs improvement
    * SignedList extends UnsignedList and replaces what is now 
        BuildList
    * EncryptedUnsignedListList 
        - extends BuildList
        - this is a buildlist including content keys for files in 
            the list; the list itself is not encrypted
    * EncryptedSignedList; extends EncryptedUnsignedList

    * Either fix or drop MockBuildList; in its current form it          * DONE
        attempts to use a simple string as a content line but           * DONE
        ItemI need GetHash(), GetPath()                                 * DONE

2014-05-14 (SPLIT OFF FROM xlattice_go)
    * use rnglib_go instead of xlattice_go/rnglib                       * DONE
    * use xlUtil_go instead of xlattice_go/util                         * DONE
    * whatever creates filter/tmp/ must create as readable !            * DONE

2014-01-09
    * Modify SignedList so that the basic functionality is identical
        to that of MockSignedList
        - and then drop MockSignedList as redundant
    * buildList.go needs ParseBuildList, currently just a stub

2014-01-07
    * SignedList.String() does not CRLF-terminate lines

2013-10-12
    * implement Bloom filter (xlattice_j/.../crypto/filters)            * DONE
      ...`
    * then look at Wikipedia article
    * and google on "golang bloom filter"

2013-09-20
    * Supposedly RSA believes dual elliptic curve deterministic 
        random number generation algorithm contains a flaw 
        introduced by NSA and so has advised not using it 
        (BBC article today)
        - so review the code
        - do something to scramble the bits ?

