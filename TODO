xlCrypto_go/TODO

2015-09-26
    * URGENT: need BuildList executable 
    * executable command line options should match those for Python 
        version and be a close as possible to Java options

2015-09-25
    * add example of (short) signed BuildList to README.md
    * need to make this version of BuildList, the Java 
        version, and the Python version operate identically (whereas
        currently the first two use MerkleTrees, the last NLHTrees)

2015-06-10
    * need test(s) for NextNBLine(), CollectPEMRSAPublicKey
    * need code for CollectPEMRSAPrivateKey
2015-06-04
    * RSA key serialization should use PEM format
        - transition needs to be done with care

2015-04-17
    * write aes_test.go to exercise AES CBC and use of IV               * DONE
    * write similar oaep_test.go, extracting code from 
        xlProtocol_go/aes_cnx

2015-04-12
    * Java specs clearly require blank line before dig sig; not
        present here
    * digsig should also be folded
2014-12-17
    * review adding support for SHA256, SHA3
    * use SHAx_BIN_LEN from xlUtil_go/const.go                          * DONE

2014-09-29
    * ReadContent: need to type check what's added to 
        BuildList.Content
    * adding item to build list must clear isHashed or set digSig
        to nil as appropriate

2014-09-28
    * rename SignedList SignedBList                                     * DONE
    * rename UnsignedList UnsignedBList                                 * DONE
    * extract ReadContents() from UnsignedList and SignedLists          * DONE
    * drop from BuildList                                               * DONE
    * FIX: ParseSignedBList() not working because not in interface(!)   * DONE
    * FIX: misuse of value receivers in buildListI.go (should all be    * DONE
        pointer receivers)                                              * DONE

2014-09-28 (-27, edited)
    * rearrange header so that 						                    * DONE
        - BuildList is     Title, Timestamp, Content					* DONE
        - UnsignedBList is Hash, BuildList				        		* DONE
        - SignedBList is   PublicKey, DigSig, BuildList					* DONE

2014-09-26
    * consider putting timestamp back into BuildList struct             * DONE
        - plus a SetTime() call for UnsignedList 
        - and EncryptedUnsignedList

2014-09-25
    * FIX: buildList_test line 46 feeds header without timestamp
        to ParseBuildList()

2014-09-24
    REFACTORING
    * BuildList becomes abstract class
        - move PubKey and DigSig fields to builds/SignedList            * DONE
        - this breaks BuildList.GetHash()
        - so GetHash() must be implemented in the child class

    * UnsignedList extends BuildList                                    * ROUGH
        - inline documentation needs improvement
    * SignedList extends UnsignedList and replaces what is now 
        BuildList
    * EncryptedUnsignedListList 
        - extends BuildList
        - this is a buildlist including content keys for files in 
            the list; the list itself is not encrypted
    * EncryptedSignedList; extends EncryptedUnsignedList

    * Either fix or drop MockBuildList; in its current form it          * DONE
        attempts to use a simple string as a content line but           * DONE
        ItemI need GetHash(), GetPath()                                 * DONE

== SPLIT OFF FROM xlattice_go =======================================

2014-05-14
    * use rnglib_go instead of xlattice_go/rnglib                       * DONE
    * use xlUtil_go instead of xlattice_go/util                         * DONE
    * whatever creates filter/tmp/ must create as readable !            * DONE

2014-01-09
    * Modify SignedList so that the basic functionality is identical
        to that of MockSignedList
        - and then drop MockSignedList as redundant
    * buildList.go needs ParseBuildList, currently just a stub

2014-01-07
    * SignedList.String() does not CRLF-terminate lines

2013-10-12
    * implement Bloom filter (xlattice_j/.../crypto/filters)            * DONE
      ...`
    * then look at Wikipedia article
    * and google on "golang bloom filter"

2013-09-20
    * Supposedly RSA believes dual elliptic curve deterministic 
        random number generation algorithm contains a flaw 
        introduced by NSA and so has advised not using it 
        (BBC article today)
        - so review the code
        - do something to scramble the bits ?

